---
# tasks file for master

- name: Templating kubeadm config
  template:
    src: kubeadmcfg.yaml.j2
    dest: /etc/kubernetes/kubeadmcfg.yaml

- name: "Enable kubelet"
  service:
    name: "kubelet"
    enabled: yes

## OLD method
# - name: "Creating CA certs"
#   shell: kubeadm init phase certs ca --config /etc/kubernetes/kubeadmcfg.yaml
#   run_once: True
#   when: inventory_hostname in groups['masters'][0]

# - name: "Retrieve CA certs"
#   fetch:
#     src: "{{item}}"
#     dest: "{{local_tmp_path}}/"
#     flat: True
#   with_items:
#     - "/etc/kubernetes/pki/ca.crt"
#     - "/etc/kubernetes/pki/ca.key"
#   run_once: True  
#   when: inventory_hostname in groups['masters'][0]

# - name: "PKI directory"
#   file:
#     path: /etc/kubernetes/pki
#     state: directory

# - name: Upload CA certs 
#   copy:
#     src: "{{local_tmp_path}}/{{item}}"
#     dest: "/etc/kubernetes/pki/"
#   with_items:
#     - "ca.key"
#     - "ca.crt"

- name: "Init the first node"
  shell: "kubeadm init --config /etc/kubernetes/kubeadmcfg.yaml --upload-certs"
  register: init_first
  when: inventory_hostname in groups['masters'][0]

- name: Generate a join token
  shell: "kubeadm token create"
  register: TOKEN
  changed_when: "TOKEN.rc > 0"
  when: 
    - inventory_hostname in groups['masters'][0]
    - groups['masters']|length > 1

- name: Generate hash
  shell: "openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'"
  register: HASH
  changed_when: "HASH.rc > 0"
  when: 
    - inventory_hostname in groups['masters'][0]
    - groups['masters']|length > 1

- name: Generate certificate key  
  shell: kubeadm init phase upload-certs --upload-certs
  register: CERTKEY
  changed_when: "CERTKEY.rc > 0"
  when: 
    - inventory_hostname in groups['masters'][0]
    - groups['masters']|length > 1

- name: "Init other masters (if any)"
  shell: "kubeadm join {{groups['lb'][0]['ansible_hostname']}}:6443 --token {{TOKEN.stdout}} --discovery-token-ca-cert-hash sha256:{{HASH.stdout}}  --experimental-control-plane --certificate-key {{CERTKEY.stdout}}"
  when: inventory_hostname not in groups['masters'][0]