
{% for host in groups['etcd'] %}
mkdir -p {{etcd_tmp_path}}/{{ host }}
{% endfor %}

ETCDHOSTS=({% for host in groups['etcd'] %}{{host}} {% endfor %})
NAMES=({% for host in groups['etcd'] %}"{{hostvars[host]['inventory_hostname']}}" {% endfor %})

for i in "${!ETCDHOSTS[@]}"; do
HOST=${ETCDHOSTS[$i]}
NAME=${NAMES[$i]}
cat << EOF > {{etcd_tmp_path}}/${HOST}/kubeadmcfg.yaml
apiVersion: "kubeadm.k8s.io/v1beta2"
kind: ClusterConfiguration
etcd:
    local:
        serverCertSANs:
        - "${HOST}"
        peerCertSANs:
        - "${HOST}"
        extraArgs:
            initial-cluster: ${NAMES[0]}=https://${ETCDHOSTS[0]}:2380,${NAMES[1]}=https://${ETCDHOSTS[1]}:2380,${NAMES[2]}=https://${ETCDHOSTS[2]}:2380
            initial-cluster-state: new
            name: ${NAME}
            listen-peer-urls: https://${HOST}:2380
            listen-client-urls: https://${HOST}:2379
            advertise-client-urls: https://${HOST}:2379
            initial-advertise-peer-urls: https://${HOST}:2380
EOF
done

kubeadm init phase certs etcd-ca

{% for host in groups['etcd'] %}

kubeadm init phase certs etcd-server --config={{etcd_tmp_path}}/{{host}}/kubeadmcfg.yaml
kubeadm init phase certs etcd-peer --config={{etcd_tmp_path}}/{{host}}/kubeadmcfg.yaml
kubeadm init phase certs etcd-healthcheck-client --config={{etcd_tmp_path}}/{{host}}/kubeadmcfg.yaml
kubeadm init phase certs apiserver-etcd-client --config={{etcd_tmp_path}}/{{host}}/kubeadmcfg.yaml
cp -R /etc/kubernetes/pki {{etcd_tmp_path}}/{{host}}/
# cleanup non-reusable certificates
find /etc/kubernetes/pki -not -name ca.crt -not -name ca.key -type f -delete
# cleanup non exportable certs
find {{etcd_tmp_path}}/{{host}} -name ca.key -type f -delete

{% endfor %}

# create static manifests for etcd pods
#kubeadm init phase etcd local --config={{etcd_tmp_path}}/${HOST0}/kubeadmcfg.yaml


#kubeadm init --config kubeadm-config.yaml --upload-certs
#kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"